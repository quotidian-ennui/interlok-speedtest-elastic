<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="warn" monitorInterval="60" shutdownHook="disable">
  <Appenders>

    <!-- <Console name="Console" target="SYSTEM_OUT">
      <PatternLayout>
        <Pattern>%-5p [%t] [%c{1.}] %m%n</Pattern>
      </PatternLayout>
    </Console> -->

    <Null name="NullAppender" />
    <Routing name="RoutingIgnoreHealthcheck">
      <Routes>
        <Script name="RoutingInit" language="JavaScript"><![CDATA[
            if (logEvent.getContextMap().get('ManagementComponent') == 'WorkflowHealthCheckComponent') {
              "IGNORE"
            } else {
              "LOG";
            }]]>
        </Script>
        <Route ref="Async" key="LOG"/>
        <Route ref="NullAppender" key="IGNORE"/>
      </Routes>
    </Routing>

    <RollingFile name="LOGFILE" fileName="logs/interlok.log" filePattern="logs/interlok.log.%i" ignoreExceptions="true" createOnDemand="true">
      <PatternLayout>
        <Pattern>%d{ISO8601} %-5p [%t][%c{1.}] %m%n</Pattern>
      </PatternLayout>
      <Policies>
        <OnStartupTriggeringPolicy />
        <!-- <TimeBasedTriggeringPolicy /> -->
        <SizeBasedTriggeringPolicy size="10 MB"/>
      </Policies>
      <!-- fileIndex == min means that .1 is always the "newest" of the rolled-over files -->
      <DefaultRolloverStrategy max="9" fileIndex="min"/>
    </RollingFile>


    <RollingFile name="ELASTIC" fileName="logs/interlok-elastic.log" filePattern="logs/interlok-elastic.log.%i" ignoreExceptions="true" createOnDemand="true">
      <EcsLayout serviceName="speedtest"/>
      <Policies>
        <OnStartupTriggeringPolicy />
        <SizeBasedTriggeringPolicy size="10 MB"/>
      </Policies>
      <DefaultRolloverStrategy max="9" fileIndex="min"/>
    </RollingFile>

    <Async name="Async">
      <AppenderRef ref="LOGFILE"/>
      <AppenderRef ref="ELASTIC"/>
    </Async>
  </Appenders>

  <Loggers>

    <Logger name="org" level="WARN"/>
    <Logger name="io" level="WARN"/>
    <Logger name="com" level="WARN"/>
    <Logger name="net" level="WARN"/>
    <Logger name="jndi" level="WARN"/>
    <Logger name="java.sql.DatabaseMetadata" level="WARN"/>
    <Logger name="org.eclipse.jetty" level="WARN"/>
    <Logger name="org.reflections" level="ERROR"/>
    <Logger name="org.hibernate.cache" level="WARN"/>
    <Logger name="org.springframework.aop.framework.CglibAopProxy" level="ERROR"/>
    <Logger name="org.springframework.context.support.PropertySourcesPlaceholderConfigurer" level="ERROR"/>
    <Logger name="org.hibernate.cache.EhCacheProvider" level="ERROR"/>
    <Logger name="com.mchange.v2.resourcepool.BasicResourcePool" level="ERROR"/>
    <Logger name="com.sun.jersey" level="ERROR"/>
    <Logger name="com.adaptris" level="TRACE"/>
    <Logger name="com.adaptris.hub.dao" level="DEBUG"/>
    <Logger name="com.adaptris.naming" level="INFO"/>
    <Logger name="com.adaptris.transform.ff.Handler" level="INFO"/>
    <Logger name="com.adaptris.core.jms.MetadataHandler" level="DEBUG"/>
    <Logger name="com.adaptris.core.cache.ehcache" level="INFO"/>
    <Logger name="com.adaptris.adaptergui" level="WARN"/>
    <Logger name="com.adaptris.configapi" level="WARN"/>
    <Logger name="com.adaptris.core.marshaller.xstream" level="WARN"/>
    <Logger name="com.adaptris.adaptergui.util.ObjectConverter" level="FATAL"/>
    <Logger name="com.adaptris.adaptergui.util.ClassUtils" level="FATAL"/>
    <Logger name="com.adaptris.core.util.DocumentBuilderFactoryBuilder" level="INFO"/>
    <Logger name="com.adaptris.core.services.jdbc.SplittingXmlPayloadTranslator" level="DEBUG"/>
    <Logger name="com.adaptris.core.fs.CompositeFileFilter" level="INFO"/>
    <Logger name="com.adaptris.core.util.LifecycleHelper" level="INFO"/>
    <Logger name="com.adaptris.core.ClosedState" level="INFO"/>
    <Logger name="com.adaptris.core.InitialisedState" level="INFO"/>
    <Logger name="com.adaptris.core.StartedState" level="INFO"/>
    <Logger name="com.adaptris.core.StoppedState" level="INFO"/>
    <Logger name="com.adaptris.core.interceptor" level="INFO"/>

    <!-- Gets rid of elastic search request logging -->
    <Logger name="tracer" level="WARN"/>

    <Root level="TRACE">
      <AppenderRef ref="RoutingIgnoreHealthcheck"/>
    </Root>
  </Loggers>
</Configuration>
